vector 所采用的数据结构是线性连续空间，vector的迭代器就是一个普通指针。
list 不仅仅是一个双向链表，还是一个环装双向链表，list迭代器是一个指向list节点并且有能力进行递增，
递减，取值成员存储操作。

deque 双向开口的连续线性空间，除了维护一个中控器map指针，还维护start，finish两个迭代器，分别指向
第一缓冲区的第一个元素和最后缓冲区的最后一个元素的下一个位置

deque一段一段的定量连续空间构成 deque采用一块所谓的map（不是STL中的map）作为主控，
这里所谓的map是一块连续空间，每个元素为一个指针，指向另外一段较大的连续线性空间，称为缓冲区。
每一个迭代器都有 cur first last node



map尾节点备用空间不足，或者前端节点空间不足，配置更大的空间。

stack是一种先进后出的数据结构，stack以deque为底部结构并封闭其头端开口，便轻而易举地形成了一个stack。
所以stack一般归类为adapter配接器(修改别的，来形成新的物体)，而非容器。stack没有迭代器。

queue是一种先进先出的数据结构，两个出口。queue以deque为底部结构，封闭其底端的出口和前端的入口，
轻而易举地形成了一个queue。没有迭代器。
也可以用list实现。

heap不属于STL容器组件。pop_heap形成一个递增序列

缺省情况下，priority_queue是以vector为底部容器。自动排列